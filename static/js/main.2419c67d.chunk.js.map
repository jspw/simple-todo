{"version":3,"sources":["utility/constants.js","utility/localStorage.js","Context/actionTypes.js","Context/todoReducer.js","Context/TodoContext.jsx","components/Navbar/NavBar.jsx","components/forms/TodoForm.jsx","components/AddTodo/AddTodo.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/Home/Home.jsx","App.jsx","index.js"],"names":["FORM_EDIT_MODE","FORM_ADD_MODE","TODO_LIST","saveTodoListLocally","todoList","localStorage","setItem","JSON","stringify","actions","todoReducer","state","action","type","updatedTodoList","payload","todo","updatedState","map","id","filter","st","initialState","TodoContext","createContext","TodoStore","props","initialTodoList","getItem","parse","getLocalTodoList","useReducer","dispatch","Provider","value","children","NavBar","className","TodoForm","fromActionType","closeTodoFormModal","username","email","todoTitle","todoDescription","useState","errorMessage","setErrorMessage","isUserSectionEmpty","setUserSectionEmpty","isTitleSectionEmpty","setTitleSectionEmpty","useContext","Date","now","Math","random","formData","setFormData","handleTodoFormInputs","e","previousState","target","name","onKeyDown","event","keyCode","onClick","onSubmit","preventDefault","onChange","autoFocus","placeholder","AddTodo","isFormVisible","setIsFormVisible","Todo","isEditing","setIsEditing","href","style","wordBreak","TodoList","length","Home","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2419c67d.chunk.js","sourcesContent":["export const FORM_EDIT_MODE = \"FORM_EDIT_MODE\";\nexport const FORM_ADD_MODE = \"FORM_ADD_MODE\";\nexport const TODO_LIST = \"TODO_LIST\";\n","import { TODO_LIST } from \"./constants\";\n\nexport function saveTodoListLocally(todoList) {\n  localStorage.setItem(TODO_LIST, JSON.stringify(todoList));\n}\n\nexport function getLocalTodoList() {\n  let todoList = localStorage.getItem(TODO_LIST);\n  if (todoList) {\n    return JSON.parse(todoList);\n  } else {\n    return [];\n  }\n}\n","export const actions = {\n  ADD_TODO: \"ADD_TODO\",\n  EDIT_TODO: \"EDIT_TODO\",\n  DELETE_TODO: \"DELETE_TODO\",\n};\n","import { saveTodoListLocally } from \"../utility/localStorage\";\nimport { actions } from \"./actionTypes\";\n\nexport default function todoReducer(state, action) {\n  switch (action.type) {\n    case actions.ADD_TODO: {\n      const updatedTodoList = [...state, action.payload.todo];\n      saveTodoListLocally(updatedTodoList);\n      return updatedTodoList;\n    }\n\n    case actions.EDIT_TODO: {\n      const updatedState = state.map((todo) => {\n        if (todo.id === action.payload.todo.id) {\n          return action.payload.todo;\n        } else return todo;\n      });\n      saveTodoListLocally(updatedState);\n      return updatedState;\n    }\n\n    case actions.DELETE_TODO: {\n      const updatedTodoList = state.filter((st) => st.id !== action.payload.id);\n      saveTodoListLocally(updatedTodoList);\n      return updatedTodoList;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createContext, useReducer } from \"react\";\nimport { getLocalTodoList } from \"../utility/localStorage\";\nimport todoReducer from \"./todoReducer\";\n\nconst initialState = [];\nexport const TodoContext = createContext(initialState);\n\nexport default function TodoStore(props) {\n  const initialTodoList = getLocalTodoList();\n  const [todoList, dispatch] = useReducer(todoReducer, initialTodoList);\n  return (\n    <TodoContext.Provider value={{ todoList, dispatch }}>\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n","export default function NavBar() {\n  return (\n    <div className=\"container m-auto  bg-black sticky top-0 z-50\">\n      <p className=\"text-xl text-white p-4 font-bold cursor-pointer\">\n        Todo App\n      </p>\n    </div>\n  );\n}\n","import { useContext, useState } from \"react\";\nimport { TodoContext } from \"../../Context/TodoContext\";\nimport { FORM_ADD_MODE, FORM_EDIT_MODE } from \"../../utility/constants\";\nimport { actions } from \"../../Context/actionTypes\";\n\nexport default function TodoForm({\n  fromActionType,\n  closeTodoFormModal,\n  id,\n  username,\n  email,\n  todoTitle,\n  todoDescription,\n}) {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const [isUserSectionEmpty, setUserSectionEmpty] = useState(false);\n\n  const [isTitleSectionEmpty, setTitleSectionEmpty] = useState(false);\n\n  const { dispatch } = useContext(TodoContext);\n\n  const [formData, setFormData] = useState({\n    id: id || Date.now() + Math.random(),\n    username: username || \"\",\n    email: email || \"\",\n    todoTitle: todoTitle || \"\",\n    todoDescription: todoDescription || \"\",\n  });\n\n  function handleEsc(event) {\n    if (event.keyCode === 27) {\n      closeTodoFormModal();\n    }\n  }\n\n  function handleTodoFormInputs(e) {\n    setFormData((previousState) => {\n      return {\n        ...previousState,\n        [e.target.name]: e.target.value,\n      };\n    });\n  }\n\n  function isFormValid() {\n    if (formData.username === \"\") {\n      setUserSectionEmpty(true);\n      setErrorMessage(\"Please enter a username\");\n      return false;\n    } else if (formData.email === \"\") {\n      setUserSectionEmpty(true);\n      setErrorMessage(\"Please enter an email\");\n      return false;\n    } else if (formData.todoTitle === \"\") {\n      setUserSectionEmpty(false);\n      setTitleSectionEmpty(true);\n      setErrorMessage(\"Please enter a title\");\n      return false;\n    }\n    return true;\n  }\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    if (isFormValid()) {\n      if (fromActionType === FORM_EDIT_MODE) {\n        dispatch({\n          type: actions.EDIT_TODO,\n          payload: {\n            todo: formData,\n          },\n        });\n      } else if (fromActionType === FORM_ADD_MODE) {\n        dispatch({\n          type: actions.ADD_TODO,\n          payload: {\n            todo: formData,\n          },\n        });\n      }\n      closeTodoFormModal();\n    }\n  }\n\n  return (\n    <div\n      className=\"flex center justify-center m-24 w-auto shadow-lg  fixed top-0 z-50\"\n      onKeyDown={handleEsc}\n    >\n      <div className=\"p-4 rounded-lg  bg-gray-100 space-y-2 border-gray-200\">\n        <div className=\"flex flex-row justify-between space-x-4\">\n          <div></div>\n          <div className=\"text-xl font-bold\">\n            {fromActionType === FORM_EDIT_MODE ? `Edit Todo` : \"Add a Todo\"}\n          </div>\n          <div\n            className=\"cursor-pointer text-red-600\"\n            onClick={closeTodoFormModal}\n          >\n            X\n          </div>\n        </div>\n        <form\n          onSubmit={handleFormSubmit}\n          className=\"flex flex-col center space-y-2 lg:\"\n        >\n          <label className=\"lg font-semibold\">User Info</label>\n          <hr />\n          <div className=\"flex flex-col sm:flex-row\">\n            <input\n              value={formData.username}\n              onChange={handleTodoFormInputs}\n              autoFocus\n              type=\"text\"\n              className=\"p-2 m-1 max-w-xl border appearance-none rounded shadow focus:shadow-outline focus:border-blue-300 focus:outline-none\"\n              placeholder=\"Username\"\n              name=\"username\"\n            />\n            <input\n              value={formData.email}\n              type=\"email\"\n              onChange={handleTodoFormInputs}\n              className=\"p-2 m-1 max-w-xl border appearance-none rounded shadow focus:shadow-outline focus:border-blue-300 focus:outline-none\"\n              placeholder=\"Email Address\"\n              name=\"email\"\n            />\n          </div>\n          {isUserSectionEmpty && (\n            <div className=\"text-center text-red-500  p-1 rounded\">\n              {errorMessage}\n            </div>\n          )}\n\n          <label className=\"lg font-semibold\">Todo Section</label>\n          <hr />\n          <div className=\"flex flex-col\">\n            <input\n              value={formData.todoTitle}\n              onChange={handleTodoFormInputs}\n              type=\"text\"\n              className=\"p-2 m-1 max-w-xl border appearance-none rounded shadow focus:shadow-outline focus:border-blue-300 focus:outline-none\"\n              placeholder=\"Todo Title\"\n              name=\"todoTitle\"\n            />\n            {isTitleSectionEmpty && (\n              <div className=\"text-center text-red-500  p-1 rounded\">\n                {errorMessage}\n              </div>\n            )}\n            <textarea\n              value={formData.todoDescription}\n              onChange={handleTodoFormInputs}\n              type=\"text\"\n              className=\"p-2 m-1 max-w-xl border appearance-none rounded shadow focus:shadow-outline focus:border-blue-300 focus:outline-none\"\n              placeholder=\"Todo Description\"\n              name=\"todoDescription\"\n            />\n          </div>\n\n          <button className=\"bg-blue-500 text-white p-2 rounded-lg hover:bg-blue-400 active:bg-blue-700\">\n            {fromActionType === FORM_EDIT_MODE ? \"Update\" : \"Add\"}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { FORM_ADD_MODE } from \"../../utility/constants\";\nimport TodoForm from \"../forms/TodoForm\";\n\nexport default function AddTodo() {\n  const [isFormVisible, setIsFormVisible] = useState(false);\n  function showForm() {\n    setIsFormVisible(true);\n  }\n  function closeTodoFormModal() {\n    setIsFormVisible(false);\n  }\n  if (isFormVisible) {\n    return (\n      <TodoForm\n        closeTodoFormModal={closeTodoFormModal}\n        fromActionType={FORM_ADD_MODE}\n      />\n    );\n  } else\n    return (\n      <div className=\"w-full my-4  flex justify-center bg-white sticky top-0 z-50 md:my-4 sm:my-4\">\n        <input\n          onClick={showForm}\n          className=\"p-3 mx-4 max-w-xl fixed border appearance-none rounded shadow w-full focus:shadow-outline focus:border-blue-300 focus:outline-none sm:mx-4 md:mx-4 fa\"\n          placeholder=\"&#xf040;   Add a todo\"\n        />\n      </div>\n    );\n}\n","import { useContext, useState } from \"react\";\nimport { TodoContext } from \"../../Context/TodoContext\";\nimport { FORM_EDIT_MODE } from \"../../utility/constants\";\nimport TodoForm from \"../forms/TodoForm\";\nimport { actions } from \"../../Context/actionTypes\";\n\nfunction Todo({ username, email, todoTitle, todoDescription, id }) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const { dispatch } = useContext(TodoContext);\n\n  function closeTodoFormModal() {\n    setIsEditing(false);\n  }\n\n  if (isEditing) {\n    return (\n      <TodoForm\n        fromActionType={FORM_EDIT_MODE}\n        closeTodoFormModal={closeTodoFormModal}\n        id={id}\n        username={username}\n        email={email}\n        todoTitle={todoTitle}\n        todoDescription={todoDescription}\n      />\n    );\n  }\n\n  return (\n    <div className=\"p-4 m-4 space-y-3 border border-gray-200  boxShadow rounded-lg flex flex-col justify-between flex-wrap hover:shadow-lg hover:border-transparent transform group w-64\">\n      <div className=\"flex flex-col justify-start space-y-4 break-words\">\n        <div className=\"space-y-2\">\n          <p className=\"text-lg font-semibold font-mono break-words\">\n            {todoTitle}\n          </p>\n          <hr />\n          <div className=\"text-xs wrapper break-words space-y-2 \">\n            <div className=\"space-x-2\">\n              <i className=\"fas fa-user-edit\"></i>\n              <span className=\"text-pink-800\">{username}</span>\n            </div>\n            <div className=\"space-x-2\">\n              <i className=\"fas fa-mail-bulk\"></i>\n              <a href={`mailto:${email}`}>{email}</a>\n            </div>\n          </div>\n        </div>\n\n        {todoDescription && (\n          <div\n            className=\"text-sm break-words \"\n            style={{ wordBreak: \"break-word\" }}\n          >\n            {todoDescription}\n          </div>\n        )}\n      </div>\n\n      <div className=\"group flex flex-row  justify-between space-x-2\">\n        <button\n          className=\"hidden bg-green-700 font-serif text-white px-2 py-1 rounded-md hover:bg-green-500 active:bg-green-900 group-hover:block\"\n          onClick={() => setIsEditing(true)}\n        >\n          Update\n        </button>\n        <button\n          className=\"hidden bg-red-700 text-white px-2 py-1 rounded-md hover:bg-red-500 active:bg-red-900 group-hover:block\"\n          onClick={() =>\n            dispatch({\n              type: actions.DELETE_TODO,\n              payload: {\n                id,\n              },\n            })\n          }\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;\n","import { useContext } from \"react\";\nimport { TodoContext } from \"../../Context/TodoContext\";\nimport Todo from \"../Todo/Todo\";\n\nexport default function TodoList() {\n  const { todoList } = useContext(TodoContext);\n\n  if (todoList.length === 0) {\n    return (\n      <div className=\"my-14 text-xl p-4 text-yellow-400\">\n        No todo to show, please add a todo.\n      </div>\n    );\n  } else\n    return (\n      <div className=\"my-14 flex flex-wrap justify-center  \">\n        {todoList.map(({ id, username, email, todoTitle, todoDescription }) => (\n          <Todo\n            key={id}\n            id={id}\n            username={username}\n            email={email}\n            todoTitle={todoTitle}\n            todoDescription={todoDescription}\n          />\n        ))}\n      </div>\n    );\n}\n","import AddTodo from \"../AddTodo/AddTodo\";\nimport ToDos from \"../TodoList/TodoList\";\n\nexport default function Home() {\n  return (\n    <div className=\"container mx-auto flex flex-col flex-wrap items-center\">\n      <AddTodo />\n      <ToDos />\n    </div>\n  );\n}\n","import React from \"react\";\nimport TodoStore from \"./Context/TodoContext\";\nimport NavBar from \"./components/Navbar/NavBar\";\nimport Home from \"./components/Home/Home\";\n\nfunction App() {\n  return (\n    <TodoStore>\n      <NavBar />\n      <Home />\n    </TodoStore>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}