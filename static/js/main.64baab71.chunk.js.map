{"version":3,"sources":["utils/localStorage.js","utils/constants.js","components/forms/TodoForm.jsx","components/AddTodo/AddTodo.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/Home/Home.jsx","components/Navbar/NavBar.jsx","container/App.jsx","reportWebVitals.js","index.js"],"names":["LocalStorage","todoList","localStorage","setItem","JSON","stringify","getItem","parse","EDITING_MODE","ADD_MODE","TodoForm","props","useState","errorMessage","setErrorMessage","isUserSectionEmpty","setUserSectionEmpty","isTitleSectionEmpty","setTitleSectionEmpty","username","email","todoTitle","todoDescription","formData","setFormData","handleTodoForm","e","previousState","target","name","value","className","actionType","onClick","closeEditing","closeModal","onSubmit","editTodo","index","addTodo","preventDefault","onChange","type","placeholder","AddTodo","flag","setFlag","Todo","deleteTodo","isEditing","setIsEditing","class","href","TodoList","disabled","viewBox","length","map","todo","id","Home","setTodoList","useEffect","x","getTodoList","saveTodoList","window","confirm","newTodoList","splice","NavBar","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64baab71.chunk.js","sourcesContent":["class LocalStorage {\n  static saveTodoList(todoList) {\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n  }\n\n  static getTodoList() {\n    let todoList = localStorage.getItem(\"todoList\");\n    if (todoList) {\n      return JSON.parse(todoList);\n    } else {\n      return [];\n    }\n  }\n}\n\nexport default LocalStorage;\n","export const EDITING_MODE = \"editing mode\";\nexport const ADD_MODE = \"add mode\";\n","import { useState } from \"react\";\nimport { ADD_MODE, EDITING_MODE } from \"../../utils/constants\";\n\nexport default function TodoForm(props) {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const [isUserSectionEmpty, setUserSectionEmpty] = useState(false);\n\n  const [isTitleSectionEmpty, setTitleSectionEmpty] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: props.username || \"\",\n    email: props.email || \"\",\n    todoTitle: props.todoTitle || \"\",\n    todoDescription: props.todoDescription || \"\",\n  });\n\n  function handleTodoForm(e) {\n    setFormData((previousState) => {\n      return {\n        ...previousState,\n        [e.target.name]: e.target.value,\n      };\n    });\n  }\n\n  function handleFormSubmit(e) {\n    if (formData.username === \"\") {\n      setUserSectionEmpty(true);\n      setErrorMessage(\"Please enter a username\");\n    } else if (formData.email === \"\") {\n      setUserSectionEmpty(true);\n      setErrorMessage(\"Please enter an email\");\n    } else if (formData.todoTitle === \"\") {\n      setUserSectionEmpty(false);\n      setTitleSectionEmpty(true);\n      setErrorMessage(\"Please enter a title\");\n    } else {\n      if (props.actionType === EDITING_MODE) {\n        props.editTodo(props.index, formData);\n        props.closeEditing();\n      } else if (props.actionType === ADD_MODE) {\n        props.addTodo(formData);\n        props.closeModal();\n      }\n    }\n    e.preventDefault();\n  }\n\n  return (\n    <div className=\"flex center justify-center m-24 w-auto shadow-lg  fixed top-0 z-50\">\n      <div className=\"p-4 rounded-lg  bg-gray-100 space-y-2 border-gray-200\">\n        <div className=\"flex flex-row justify-between space-x-4\">\n          <div></div>\n          <div className=\"text-xl font-bold\">\n            {props.actionType === EDITING_MODE ? `Edit Todo` : \"Add a Todo\"}\n          </div>\n          <div\n            className=\"cursor-pointer text-red-600\"\n            onClick={\n              props.actionType === EDITING_MODE\n                ? props.closeEditing\n                : props.closeModal\n            }\n          >\n            X\n          </div>\n        </div>\n        <form\n          onSubmit={handleFormSubmit}\n          className=\"flex flex-col center space-y-2 lg:\"\n        >\n          <label className=\"lg font-semibold\">User Info</label>\n          <hr />\n          <div className=\"flex flex-col sm:flex-row\">\n            <input\n              value={formData.username}\n              onChange={handleTodoForm}\n              type=\"text\"\n              className=\"p-2 m-1 max-w-xl border appearance-none rounded shadow focus:shadow-outline focus:border-blue-300 focus:outline-none\"\n              placeholder=\"Username\"\n              name=\"username\"\n            />\n            <input\n              value={formData.email}\n              type=\"email\"\n              onChange={handleTodoForm}\n              className=\"p-2 m-1 max-w-xl border appearance-none rounded shadow focus:shadow-outline focus:border-blue-300 focus:outline-none\"\n              placeholder=\"Email Address\"\n              name=\"email\"\n            />\n          </div>\n          {isUserSectionEmpty ? (\n            <div className=\"text-center text-red-500  p-1 rounded\">\n              {errorMessage}\n            </div>\n          ) : (\n            \"\"\n          )}\n\n          <label className=\"lg font-semibold\">Todo Section</label>\n          <hr />\n          <div className=\"flex flex-col\">\n            <input\n              value={formData.todoTitle}\n              onChange={handleTodoForm}\n              type=\"text\"\n              className=\"p-2 m-1 max-w-xl border appearance-none rounded shadow focus:shadow-outline focus:border-blue-300 focus:outline-none\"\n              placeholder=\"Todo Title\"\n              name=\"todoTitle\"\n            />\n            {isTitleSectionEmpty ? (\n              <div className=\"text-center text-red-500  p-1 rounded\">\n                {errorMessage}\n              </div>\n            ) : (\n              \"\"\n            )}\n            <textarea\n              value={formData.todoDescription}\n              onChange={handleTodoForm}\n              type=\"text\"\n              className=\"p-2 m-1 max-w-xl border appearance-none rounded shadow focus:shadow-outline focus:border-blue-300 focus:outline-none\"\n              placeholder=\"Todo Description\"\n              name=\"todoDescription\"\n            />\n          </div>\n\n          <button className=\"bg-blue-500 text-white p-2 rounded-lg hover:bg-blue-400 active:bg-blue-700\">\n            {props.actionType === EDITING_MODE ? `Update` : \"Add\"}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { ADD_MODE } from \"../../utils/constants\";\nimport TodoForm from \"../forms/TodoForm\";\n\nexport default function AddTodo(props) {\n  const [flag, setFlag] = useState(false);\n\n  function showModal() {\n    setFlag(true);\n  }\n\n  function closeModal() {\n    setFlag(false);\n  }\n\n  if (flag) {\n    return (\n      <TodoForm\n        closeModal={closeModal}\n        addTodo={props.addTodo}\n        actionType={ADD_MODE}\n      />\n    );\n  } else\n    return (\n      <div className=\"w-full my-2  flex justify-center bg-white sticky top-0 z-50 \">\n        <input\n          onClick={showModal}\n          className=\"p-3 max-w-xl fixed border appearance-none rounded shadow w-full focus:shadow-outline focus:border-blue-300 focus:outline-none \"\n          placeholder=\"Add a todo\"\n        />\n      </div>\n    );\n}\n","import { useState } from \"react\";\nimport { EDITING_MODE } from \"../../utils/constants\";\nimport TodoForm from \"../forms/TodoForm\";\n\nfunction Todo({\n  username,\n  email,\n  todoTitle,\n  todoDescription,\n  deleteTodo,\n  editTodo,\n  index,\n}) {\n  function handleClick() {}\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  function closeEditing() {\n    setIsEditing(false);\n  }\n\n  if (isEditing) {\n    return (\n      <TodoForm\n        actionType={EDITING_MODE}\n        username={username}\n        email={email}\n        todoTitle={todoTitle}\n        todoDescription={todoDescription}\n        closeEditing={closeEditing}\n        editTodo={editTodo}\n        index={index}\n      />\n    );\n  }\n\n  return (\n    <div\n      onClick={handleClick}\n      className=\"p-4 m-4 space-y-3 border border-gray-200  boxShadow rounded-lg flex flex-col justify-between flex-wrap hover:shadow-lg hover:border-transparent transform group w-64 h-auto\"\n    >\n      <div className=\"flex flex-col justify-start space-y-4\">\n        <div className=\"space-y-2\">\n          <p className=\"text-lg font-semibold font-mono break-all\">\n            {todoTitle}\n          </p>\n          <hr />\n          <div className=\"text-xs wrapper break-all space-y-2 \">\n            <div className=\"space-x-2\">\n              <i class=\"fas fa-user-edit\"></i>\n              <span className=\"text-pink-800\">{username}</span>\n            </div>\n            <div className=\"space-x-2\">\n              <i className=\"fas fa-mail-bulk\"></i>\n              <a href={`mailto:${email}`}>{email}</a>\n            </div>\n          </div>\n        </div>\n\n        {todoDescription ? (\n          <div className=\"text-sm break-all\">{todoDescription}</div>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      <div className=\"group flex flex-row  justify-between space-x-2\">\n        <button\n          className=\"hidden bg-green-700 font-serif text-white px-2 py-1 rounded-md hover:bg-green-500 active:bg-green-900 group-hover:block\"\n          onClick={() => setIsEditing(true)}\n        >\n          Update\n        </button>\n        <button\n          className=\"hidden bg-red-700 text-white px-2 py-1 rounded-md hover:bg-red-500 active:bg-red-900 group-hover:block\"\n          onClick={() => deleteTodo(index)}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;\n","import Todo from \"../Todo/Todo\";\nexport default function TodoList({ todoList, deleteTodo, editTodo }) {\n  if (typeof todoList === \"undefined\")\n    return (\n      <button type=\"button\" class=\"bg-rose-600 ...\" disabled>\n        <svg class=\"animate-spin h-5 w-5 mr-3 ...\" viewBox=\"0 0 24 24\"></svg>\n        Processing\n      </button>\n    );\n  else if (todoList.length === 0) {\n    return (\n      <div className=\"my-14 text-xl p-4 text-yellow-400\">\n        No todo to show, please add a todo\n      </div>\n    );\n  } else\n    return (\n      <div className=\"my-14 flex flex-wrap justify-center  \">\n        {todoList.map((todo, id) => (\n          <Todo\n            key={id}\n            index={id}\n            username={todo.username}\n            todoTitle={todo.todoTitle}\n            todoDescription={todo.todoDescription}\n            email={todo.email}\n            deleteTodo={deleteTodo}\n            editTodo={editTodo}\n          />\n        ))}\n      </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport LocalStorage from \"../../utils/localStorage\";\nimport AddTodo from \"../AddTodo/AddTodo\";\nimport ToDos from \"../TodoList/TodoList\";\n\nexport default function Home() {\n  const [todoList, setTodoList] = useState([]);\n\n  const [flag, setFlag] = useState(false);\n\n  useEffect(() => {\n    let x = LocalStorage.getTodoList();\n    if (x) {\n      setTodoList(x);\n      setFlag(true);\n    }\n  }, [flag]);\n\n  function addTodo(todo) {\n    setTodoList([...todoList, todo]);\n    LocalStorage.saveTodoList([...todoList, todo]);\n  }\n\n  function deleteTodo(index) {\n    let confirm = window.confirm(\"You are deleting the todo? \");\n\n    if (confirm) {\n      let newTodoList = [...todoList];\n      newTodoList.splice(index, 1);\n      setTodoList(newTodoList);\n      LocalStorage.saveTodoList(newTodoList);\n    }\n  }\n\n  function editTodo(index, todo) {\n    let newTodoList = todoList;\n    newTodoList[index] = todo;\n    setTodoList([...newTodoList]);\n    LocalStorage.saveTodoList(newTodoList);\n  }\n\n  return (\n    <div className=\"container mx-auto flex flex-col flex-wrap items-center\">\n      <AddTodo addTodo={addTodo} />\n      <ToDos todoList={todoList} deleteTodo={deleteTodo} editTodo={editTodo} />\n    </div>\n  );\n}\n","export default function NavBar() {\n  return (\n    <div className=\"container m-auto  bg-black sticky top-0 z-50\">\n      <p className=\"text-xl text-white p-4 font-bold cursor-pointer\">\n        <a href=\"/\">Todo App</a>\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Home from \"../components/Home/Home.jsx\";\nimport NavBar from \"../components/Navbar/NavBar.jsx\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <NavBar />\n      <Home />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./container/App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}